#BlueJ class context
comment0.target=HashMap
comment1.params=
comment1.target=HashMap()
comment10.params=key
comment10.target=java.lang.Object\ remove(java.lang.Object)
comment10.text=\n\tRemove\ the\ association\ for\ the\ specified\ key\ from\ this\ map.\n\tReturn\ the\ value\ that\ was\ associated\ with\ the\ specified\ key\n\tOr\ return\ null\ if\ no\ value\ was\ associated\ with\ the\ key.\n\tPrecondition\:\ key\ \!\=\ null\n
comment11.params=
comment11.target=java.util.List\ values()
comment11.text=\n\tReturn\ a\ List<V>\ of\ the\ values\ that\ are\ stored\ in\ this\ map\n
comment12.params=
comment12.target=Set\ keySet()
comment12.text=\n\tReturn\ a\ Set<E>\ of\ the\ keys\ that\ have\ associations\ in\ this\ map\n
comment2.params=n
comment2.target=HashMap(int)
comment3.params=key
comment3.target=int\ getIndex(java.lang.Object)
comment3.text=\n\tHelper\ Method\:\ Calculate\ the\ index\ that\ an\ object\ will\ be\ stored\ in\ an\ array\ using\ its\ hashCode\n\n\tReturns\ the\ index\ where\ key\ belongs\ in\ the\ instance\ variable\ array\ using\ the\ key's\ hashCode\n\tBecareful\ about\ objects\ that\ have\ a\ negative\ hashCode\!\ Remember,\ you\ can't\ have\ a\ negative\ index\!\n
comment4.params=key
comment4.target=boolean\ containsKey(java.lang.Object)
comment4.text=\n\tReturn\ true\ if\ this\ map\ contains\ the\ specified\ key\n\tPrecondition\:\ key\ \!\=\ null\n
comment5.params=value
comment5.target=boolean\ containsValue(java.lang.Object)
comment5.text=\n\tReturn\ true\ if\ this\ map\ contins\ the\ specified\ value\n\tPrecondition\:\ value\ \!\=\ null\n
comment6.params=
comment6.target=boolean\ isEmpty()
comment6.text=\n\tReturn\ true\ is\ this\ map\ contains\ no\ Nodes\n
comment7.params=
comment7.target=int\ size()
comment7.text=\n\tReturn\ the\ number\ of\ Nodes\ this\ map\ contains\n
comment8.params=key
comment8.target=java.lang.Object\ get(java.lang.Object)
comment8.text=\n\tReturn\ the\ value\ of\ the\ Node\ that\ has\ the\ specified\ key\n\tIf\ there\ is\ no\ Node\ with\ the\ specified\ key,\ then\ return\ null\n
comment9.params=key\ value
comment9.target=java.lang.Object\ put(java.lang.Object,\ java.lang.Object)
comment9.text=\n\tAssociate\ the\ specified\ value\ with\ the\ specified\ key\n\tIf\ the\ map\ already\ contains\ the\ specified\ key,\ the\ replace\ \n\tthe\ value\ of\ that\ key\ and\ return\ the\ original\ value.\n\tOtherwise\ add\ a\ new\ Node\ to\ the\ map\ and\ return\ null.\n\tPrecondition\:\ key\ \!\=\ null\ &&\ value\ \!\=\ null\n
numComments=13
